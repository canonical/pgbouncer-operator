[32mINFO    [0m juju.model:model.py:2971 Waiting for model:
  postgresql-test-app/0 [idle] active: received database credentials of the first database
  postgresql-test-app/1 [allocating] waiting: waiting for machine
[32mINFO    [0m juju.model:model.py:2971 Waiting for model:
  postgresql-test-app/0 [idle] active: received database credentials of the first database
  postgresql-test-app/1 [allocating] waiting: waiting for machine
[32mINFO    [0m juju.model:model.py:2971 Waiting for model:
  postgresql-test-app/0 [idle] active: received database credentials of the first database
  postgresql-test-app/1 [idle] active: received database credentials of the first database
[32mINFO    [0m juju.model:model.py:2971 Waiting for model:
  postgresql-test-app/0 [idle] active: received database credentials of the first database
  postgresql-test-app/1 [idle] active: received database credentials of the first database
  pgbouncer/0 [idle] active: 
  pgbouncer/1 [executing] maintenance: Installing and configuring PgBouncer
[32mINFO    [0m juju.model:model.py:2971 Waiting for model:
  postgresql-test-app/1 [idle] active: received database credentials of the first database
  pgbouncer/0 [idle] active: 
  pgbouncer/1 [idle] active: 
[32mINFO    [0m integration.relations.pgbouncer_provider.test_pgbouncer_provider:test_pgbouncer_provider.py:207 {'databases': {'postgresql_test_app_first_database': 'host=10.75.102.154 dbname=postgresql_test_app_first_database port=5432 auth_user=pgbouncer_auth_relation_6', 'postgresql_test_app_first_database_readonly': 'host=10.75.102.242 dbname=postgresql_test_app_first_database port=5432 auth_user=pgbouncer_auth_relation_6', '*': 'host=10.75.102.154 auth_dbname=postgresql_test_app_first_database port=5432 auth_user=pgbouncer_auth_relation_6', 'another_database_readonly': 'host=10.75.102.242 dbname=another_database auth_dbname=postgresql_test_app_first_database port=5432 auth_user=pgbouncer_auth_relation_6'}, 'peers': {'1': 'host=/tmp/pgbouncer/instance_0 port=6432'}, 'pgbouncer': {'peer_id': '1', 'listen_addr': '127.0.0.1', 'listen_port': '6432', 'logfile': '/var/snap/charmed-pgbouncer/common/var/log/pgbouncer/pgbouncer/instance_0/pgbouncer.log', 'pidfile': '/tmp/pgbouncer/instance_0/pgbouncer.pid', 'stats_users': 'pgbouncer_stats_pgbouncer', 'auth_type': 'md5', 'user': 'snap_daemon', 'max_client_conn': '10000', 'ignore_startup_parameters': 'extra_float_digits,options', 'server_tls_sslmode': 'prefer', 'so_reuseport': '1', 'unix_socket_dir': '/tmp/pgbouncer/instance_0', 'pool_mode': 'session', 'max_db_connections': '100', 'default_pool_size': '50', 'min_pool_size': '25', 'reserve_pool_size': '25', 'auth_query': 'SELECT username, password FROM pgbouncer_auth_relation_6.get_auth($1)', 'auth_file': '/var/snap/charmed-pgbouncer/current/etc/pgbouncer/pgbouncer/userlist.txt'}}
[32mINFO    [0m integration.relations.pgbouncer_provider.test_pgbouncer_provider:test_pgbouncer_provider.py:209 Checking connection for postgresql-test-app/0
[32mINFO    [0m root:helpers.py:78 running query: 
 CREATE TABLE IF NOT EXISTS quick_test(data TEXT);INSERT INTO quick_test(data) VALUES('ca60117c-376b-4dec-b96d-074b4f27026c');SELECT data FROM quick_test WHERE data = 'ca60117c-376b-4dec-b96d-074b4f27026c';
[32mINFO    [0m root:helpers.py:79 {'dbname': 'postgresql_test_app_first_database', 'query': "CREATE TABLE IF NOT EXISTS quick_test(data TEXT);INSERT INTO quick_test(data) VALUES('ca60117c-376b-4dec-b96d-074b4f27026c');SELECT data FROM quick_test WHERE data = 'ca60117c-376b-4dec-b96d-074b4f27026c';", 'relation-id': 7, 'relation-name': 'first-database', 'readonly': False}
[32mINFO    [0m root:helpers.py:82 query results: {'results': '[["ca60117c-376b-4dec-b96d-074b4f27026c"]]', 'return-code': 0}
[32mINFO    [0m integration.relations.pgbouncer_provider.test_pgbouncer_provider:test_pgbouncer_provider.py:209 Checking connection for postgresql-test-app/1
[32mINFO    [0m root:helpers.py:78 running query: 
 CREATE TABLE IF NOT EXISTS quick_test(data TEXT);INSERT INTO quick_test(data) VALUES('10933d1f-345d-493f-babc-8ebb7266b24f');SELECT data FROM quick_test WHERE data = '10933d1f-345d-493f-babc-8ebb7266b24f';
[32mINFO    [0m root:helpers.py:79 {'dbname': 'postgresql_test_app_first_database', 'query': "CREATE TABLE IF NOT EXISTS quick_test(data TEXT);INSERT INTO quick_test(data) VALUES('10933d1f-345d-493f-babc-8ebb7266b24f');SELECT data FROM quick_test WHERE data = '10933d1f-345d-493f-babc-8ebb7266b24f';", 'relation-id': 7, 'relation-name': 'first-database', 'readonly': False}
[32mINFO    [0m root:helpers.py:82 query results: {'results': '[["10933d1f-345d-493f-babc-8ebb7266b24f"]]', 'return-code': 0}
[32mINFO    [0m root:helpers.py:96 (0, '{"postgresql-test-app/0":{"machine":"0","opened-ports":null,"public-address":"10.75.102.169","charm":"ch:amd64/jammy/postgresql-test-app-172","leader":true,"life":"alive","relation-info":[{"relation-id":7,"endpoint":"first-database","related-endpoint":"database","application-data":{"data":"{\\"database\\": \\"postgresql_test_app_first_database\\", \\"extra-user-roles\\": \\"CREATEDB,CREATEROLE\\", \\"requested-secrets\\": \\"[\\\\\\"username\\\\\\", \\\\\\"password\\\\\\", \\\\\\"tls\\\\\\", \\\\\\"tls-ca\\\\\\", \\\\\\"uris\\\\\\"]\\"}","database":"postgresql_test_app_first_database","endpoints":"localhost:6432","secret-user":"secret://1c0262ec-6841-482f-81dd-902cb5c24d93/cq69jgkii2a3u646uue0","subordinated":"true","version":"14.11"},"local-unit":{"in-scope":false,"data":null},"related-units":{"pgbouncer/0":{"in-scope":true,"data":{"egress-subnets":"10.75.102.169/32","ingress-address":"10.75.102.169","private-address":"10.75.102.169","state":"ready"}},"pgbouncer/1":{"in-scope":true,"data":{"egress-subnets":"10.75.102.66/32","ingress-address":"10.75.102.66","private-address":"10.75.102.66","state":"ready"}}}},{"relation-id":0,"endpoint":"postgresql-test-peers","related-endpoint":"postgresql-test-peers","application-data":{},"local-unit":{"in-scope":true,"data":{"egress-subnets":"10.75.102.169/32","ingress-address":"10.75.102.169","private-address":"10.75.102.169"}},"related-units":{"postgresql-test-app/1":{"in-scope":true,"data":{"egress-subnets":"10.75.102.66/32","ingress-address":"10.75.102.66","private-address":"10.75.102.66"}}}}]}}\n', '')