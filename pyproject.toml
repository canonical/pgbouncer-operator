# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[project]
name = "foo"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "cosl>=0.0.50",
    "cryptography>=42.0.5",
    "jinja2>=3.1.6",
    "jsonschema>=4.23.0",
    "opentelemetry-exporter-otlp-proto-http==1.21.0",
    "ops>=2.20.0",
    "poetry-core>=1.9.1,<2",
    "tenacity>=9.0.0",
    "pydantic>=1.10.22",
    "psycopg2>=2.9.1",
    "psycopg[c]>=3.2.6",
]

[tool.uv]
no-binary = true
build-constraint-dependencies = [
    "setuptools-scm<=8.1.0"
]

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
ruff = "^0.11.7"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
codespell = "^2.4.1"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
coverage = {extras = ["toml"], version = "==7.6.1"}
pytest = "^8.3.5"
parameterized = "^0.9.0"

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest = "^8.3.5"
pytest-operator = "^0.42.0"
# renovate caret doesn't work: https://github.com/renovatebot/renovate/issues/26940
juju = "<=3.6.1.1"
tenacity = "*"
mailmanclient = "^3.3.5"
psycopg2-binary = "^2.9.10"
landscape-api-py3 = "^0.9.0"
allure-pytest = "^2.14.0"
allure-pytest-default-results = "^0.1.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "logger\\.debug"
]

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"
markers = ["juju2", "juju3", "juju_secrets"]

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

# Linting tools configuration
[tool.ruff]
# preview and explicit preview are enabled for CPY001
preview = true
target-version = "py38"
src = ["src", "."]
line-length = 99

[tool.ruff.lint]
explicit-preview-rules = true
select = ["A", "E", "W", "F", "C", "N", "D", "I001", "B", "CPY001", "RUF", "S", "SIM", "UP", "TCH"]
extend-ignore = [
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]
# Ignore E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["E501", "D107"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D100", "D101", "D102", "D103", "D104",
    # Asserts
    "B011",
    # Disable security checks for tests
    "S",
]

[tool.ruff.lint.flake8-copyright]
# Check for properly formatted copyright header in each file
author = "Canonical Ltd."
notice-rgx = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+"
min-file-size = 1

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"
